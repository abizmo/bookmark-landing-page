---
import { cva, type VariantProps } from 'class-variance-authority'

import { cn } from '../../lib/utils'
import type { HTMLAttributes } from 'astro/types'

const buttonVariants = cva(
  'inline-flex items-center justify-center rounded-md text-sm font-medium shadow-md leading-none',
  {
    variants: {
      variant: {
        primary: 'bg-primary-400 text-neutral-100 shadow-primary-400/25',
        accent: 'bg-accent-400 text-neutral-100 shadow-accent-400/25',
        neutral: 'bg-neutral-400/5 text-neutral-400 shadow-neutral-400/25'
      },
      size: {
        default: 'py-4 px-6'
      }
    }
  }
)

interface ButtonProps extends HTMLAttributes<'button'> {}

interface LinkProps extends HTMLAttributes<'a'> {}

type UnionProps = ButtonProps | LinkProps

type Props = UnionProps & VariantProps<typeof buttonVariants>

const {
  class: className,
  variant = 'primary',
  size = 'default',
  href,
  ...props
} = Astro.props
---

{
  href ? (
    <a
      href={href}
      class={cn(buttonVariants({ variant, size, className }))}
      {...props}
    >
      <slot />
    </a>
  ) : (
    <button class={cn(buttonVariants({ variant, size, className }))} {...props}>
      <slot />
    </button>
  )
}
