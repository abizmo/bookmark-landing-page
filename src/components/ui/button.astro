---
import type { HTMLTag, Polymorphic } from 'astro/types'
import { cva, type VariantProps } from 'class-variance-authority'

import { cn } from '../../lib/utils'

const buttonVariants = cva(
  'inline-flex items-center justify-center rounded-md text-sm font-medium leading-none border-2 py-4',
  {
    variants: {
      variant: {
        primary:
          'bg-primary-400 text-neutral-100 shadow-md shadow-primary-400/25 border-primary-400 hover:text-primary-400 hover:bg-neutral-100 focus-within:text-primary-400 focus-within:bg-neutral-100 outline-none',
        accent:
          'bg-accent-400 text-neutral-100 shadow-md shadow-accent-400/25 border-accent-400 hover:text-accent-400 hover:bg-neutral-100 focus-within:text-accent-400 focus-within:bg-neutral-100 outline-none',
        neutral:
          'bg-neutral-400/5 text-neutral-400 shadow-md shadow-neutral-400/25 border-neutral-400/5  hover:border-neutral-400 hover:bg-neutral-100 focus-within:border-neutral-400 focus-within:bg-neutral-100 outline-none',
        outline: 'bg-transparent text-current border-current'
      },
      size: {
        default: 'px-6',
        wide: 'px-8',
        fullWidth: 'w-full'
      }
    }
  }
)

type Props<Tag extends HTMLTag> = VariantProps<typeof buttonVariants> &
  Polymorphic<{ as: Tag }>

const {
  class: className,
  variant = 'primary',
  size = 'default',
  as: Tag = 'button',
  ...props
} = Astro.props
---

<Tag class={cn(buttonVariants({ variant, size, className }))} {...props}>
  <slot />
</Tag>
